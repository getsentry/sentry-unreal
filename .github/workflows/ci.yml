name: package-plugin-workflow

on: [push]

jobs:
  android-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: Android
      runsOn: ubuntu-latest

  ios-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: IOS
      runsOn: macos-latest

  macos-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: Mac
      runsOn: macos-latest

  linux-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: Linux
      runsOn: ubuntu-latest

  windows-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: Win64
      runsOn: windows-latest

  build:
    needs: [android-sdk, ios-sdk, macos-sdk, linux-sdk, windows-sdk]
    name: Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: Android-sdk
          path: plugin-dev/Source/ThirdParty/Android

      - uses: actions/download-artifact@v2
        with:
          name: Android-libraries
          path: modules/sentry-java/sentry-android-ndk/build/intermediates/merged_native_libs/release/out/lib

      - uses: actions/download-artifact@v2
        with:
          name: IOS-sdk
          path: plugin-dev/Source/ThirdParty/IOS

      - uses: actions/download-artifact@v2
        with:
          name: Mac-sdk
          path: plugin-dev/Source/ThirdParty/Mac

      - uses: actions/download-artifact@v2
        with:
          name: Linux-sdk
          path: plugin-dev/Source/ThirdParty/Linux

      - uses: actions/download-artifact@v2
        with:
          name: Win64-sdk
          path: plugin-dev/Source/ThirdParty/Win64

      - name: Prepare Sentry packages for release
        shell: pwsh
        run: ./scripts/packaging/pack.ps1

      - name: Upload release artifacts
        uses: actions/upload-artifact@v2
        with:
          # Artifact name is the commit sha. Which is what craft uses to find the relevant artifact.
          name: ${{ github.sha }}
          if-no-files-found: error
          path: |
            sentry-unreal-*.zip
          # Adding the native libraries so the symbol collector craft target can find/upload them
          # TODO modules/sentry-java/sentry-android-ndk/build/intermediates/merged_native_libs/release/out/lib/*

  package-validation:
    needs: [build]
    name: Check snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download packages
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}

      # If this step fails, you can accept the new file content by
      # running the following script locally with 'accept' as an argument
      # and committing the new snapshot file to your branch. i.e:
      # pwsh ./scripts/test-contents.ps1 accept
      - name: Verify package content against snapshot
        shell: pwsh
        run: ./scripts/packaging/test-contents.ps1

  # Smoke-test that the UnrealEnginge can package the plugin.
  test-ue-packaging:
    name: Test UE ${{ matrix.unreal }} packaging
    runs-on: ubuntu-latest
    needs: [build, package-validation]

    strategy:
      fail-fast: false
      matrix:
        # Note: these versions must match scripts/packaging/engine-versions.txt
        unreal: ['4.27', '5.0'] # 4.26 is not available

    steps:
      - name: Free disk space
        if: ${{ steps.exists.outputs.value == 0 }}
        run: |
          # time df -h
          sudo time swapoff -a
          sudo time rm -f /swapfile
          # sudo time rm -rf /usr/local/lib/android
          sudo time rm -rf /usr/share/dotnet
          sudo time rm -rf /usr/share/swift
          sudo time rm -rf /usr/local/.ghcup
          sudo time rm -rf /usr/local/lib/node_modules
          sudo time rm -rf /usr/lib/google-cloud-sdk
          sudo time rm -rf /opt/pipx
          sudo time rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo time apt-get clean
          sudo time rm -rf /var/lib/apt/lists/*
          # time docker rmi $(docker image ls -aq)
          # time du --max-depth=3 --threshold=100M -h /usr /opt /var 2>/dev/null | sort -hr
          df -h

      - name: Start Docker container
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker run -td --name unreal --user root \
            -v ${{ github.workspace }}:/sentry-unreal \
            --workdir /sentry-unreal \
            ghcr.io/epicgames/unreal-engine:dev-slim-${{ matrix.unreal }}

      - name: Download packages
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}

      - name: Unzip package from the build job
        run: |
          unzip sentry-unreal-*-engine${{ matrix.unreal }}.zip -d .
          rm -f sentry-unreal-*.zip

      - name: Install Linux Dependencies
        run: |
          docker exec unreal sudo apt-get update
          docker exec unreal pip3 install --upgrade pip

      - name: Install UE CLI
        run:
          docker exec unreal pip3 install ue4cli

      - name: Configure UE CLI
        run:
          docker exec unreal ue4 setroot /home/ue4/UnrealEngine

      - name: Package plugin
        run: docker exec unreal ue4 package
