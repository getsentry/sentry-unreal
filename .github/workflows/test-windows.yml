on:
  workflow_call:
    inputs:
      unreal-version:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  test:
    name: Test
    runs-on: windows-2022

    steps:
      - name: Log in to GitHub package registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start Docker container
        env:
          WORKSPACE_PATH: ${{ github.workspace }}
          UNREAL_VERSION: ${{ inputs.unreal-version }}
          DISALLOW_RAW_POINTERS: ${{ inputs.unreal-version == '4.27' && 'false' || 'true' }}
        run: |
          docker run -td `
            --name unreal `
            --volume "${env:WORKSPACE_PATH}:C:/workspace" `
            --workdir C:/workspace `
            --env DISALLOW_RAW_POINTERS=${env:DISALLOW_RAW_POINTERS} `
            ghcr.io/getsentry/unreal-docker:"$env:UNREAL_VERSION"

      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.sha }}

      - uses: actions/checkout@v4
        with:
          path: checkout
          submodules: recursive

      - name: Extract package to sample/Plugins
        env:
          WORKSPACE_PATH: ${{ github.workspace }}
          UNREAL_VERSION: ${{ inputs.unreal-version }}
        run: |
          New-Item -ItemType Directory -Path "$env:WORKSPACE_PATH\checkout\sample\Plugins\sentry" -Force
          Expand-Archive -Path "sentry-unreal-*-engine$env:UNREAL_VERSION.zip" -DestinationPath "$env:WORKSPACE_PATH\checkout\sample\Plugins\sentry" -Force

      - name: Update engine's build configuration
        run: |
          docker exec unreal powershell -Command 'New-Item -ItemType Directory -Path "$env:USERPROFILE\AppData\Roaming\Unreal Engine\UnrealBuildTool" -Force'
          docker exec unreal powershell -Command 'Copy-Item -Path "C:/workspace/checkout/.github/BuildConfiguration.xml" -Destination "$env:USERPROFILE\AppData\Roaming\Unreal Engine\UnrealBuildTool\BuildConfiguration.xml" -Force'

      - name: Run tests
        id: run-tests
        env:
          EDITOR_BINARY: ${{ inputs.unreal-version == '4.27' && 'UE4Editor.exe' || 'UnrealEditor.exe' }}
          SENTRY_UPLOAD_SYMBOLS_AUTOMATICALLY: true
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: |
          docker exec `
            -e SENTRY_UPLOAD_SYMBOLS_AUTOMATICALLY="$env:SENTRY_UPLOAD_SYMBOLS_AUTOMATICALLY" `
            -e SENTRY_AUTH_TOKEN="$env:SENTRY_AUTH_TOKEN" `
            -e SENTRY_ORG="$env:SENTRY_ORG" `
            -e SENTRY_PROJECT="$env:SENTRY_PROJECT" `
            unreal C:\UnrealEngine\Engine\Build\BatchFiles\RunUAT.bat BuildCookRun `
            -project=C:/workspace/checkout/sample/SentryPlayground.uproject `
            -archivedirectory=C:/workspace/checkout/sample/Builds `
            -platform=Win64 `
            -nop4 `
            -cook `
            -build `
            -stage `
            -prereqss `
            -package `
            -archive
          docker exec unreal "C:\UnrealEngine\Engine\Binaries\Win64\$env:EDITOR_BINARY" C:/workspace/checkout/sample/SentryPlayground.uproject `
            -ReportExportPath=C:/workspace/checkout/sample/Saved/Automation `
            -ExecCmds="Automation RunTests Sentry;quit" `
            -TestExit="Automation Test Queue Empty" `
            -Unattended `
            -NoPause `
            -NoSplash `
            -NullRHI

      - name: Collect sample test info
        if: ${{ always() && steps.run-tests.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: UE ${{ inputs.unreal-version }} sample test report (Windows)
          path: |
            checkout/sample/Saved/Automation

      - name: Upload sample build
        if: ${{ success() && steps.run-tests.outcome == 'success' }}
        uses: actions/upload-artifact@v4
        with:
          name: UE ${{ inputs.unreal-version }} sample build (Windows)
          path: checkout/sample/Builds/${{ inputs.unreal-version == '4.27' && 'WindowsNoEditor' || 'Windows' }}/
          retention-days: 1
      
