on:
  workflow_call:
    inputs:
      runsOn:
        required: true
        type: string
      target:
        required: true
        type: string
      ue_version:
        required: true
        type: string
      ue_repo:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ${{ inputs.runsOn }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Building docker images for UE 5.4 and newer require extra disk space
      - name: Clean up disk space before Docker build
        if: ${{ inputs.target == 'minimal' }}
        shell: pwsh
        run: |
          .\scripts\clean-storage-win.ps1

      - name: Set Visual Studio version based on UE version
        id: set_vs_version
        shell: bash
        run: |
          if [[ "${{ inputs.ue_version }}" == "4.27" || "${{ inputs.ue_version }}" == "5.0" || "${{ inputs.ue_version }}" == "5.1" ]]; then
            echo "vs_version=2019" >> $GITHUB_OUTPUT
          else
            echo "vs_version=2022" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GitHub package registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        if: ${{ steps.exists.outputs.value == 0 }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker image with build prerequisites
        if: ${{ inputs.target == 'source' || inputs.target == 'minimal' }} 
        run: |
          docker pull ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}-build-prerequisites
          docker tag ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}-build-prerequisites adamrehn/ue4-build-prerequisites:ltsc2022-vs${{ steps.set_vs_version.outputs.vs_version }}

      - name: Pull Docker image with engine sources
        if: ${{ inputs.target == 'minimal' }}
        run: |
          docker pull ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}-source
          docker tag ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}-source adamrehn/ue4-source:custom-${{ inputs.ue_version }}-ltsc2022-vs${{ steps.set_vs_version.outputs.vs_version }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.8'
          architecture: 'x64'

      - name: Install unreal-docker
        run: |
            pip install ue4-docker

      - name: Configure unreal-docker
        run: |
          ue4-docker setup

      - name: Build Unreal Engine Docker image
        run: |
          ue4-docker build custom -repo="${{ inputs.ue_repo }}" -branch="${{ inputs.ue_version }}" `
          -basetag ltsc2022 `
          -suffix "${{ inputs.ue_version }}" `
          -isolation=process `
          -username=${{ secrets.DOCKER_USERNAME }} `
          -password=${{ secrets.DOCKER_TOKEN }} `
          --visual-studio ${{ steps.set_vs_version.outputs.vs_version }} `
          --target ${{ inputs.target }} `
          --exclude debug `
          --exclude templates `
          --exclude ddc `
          --opt buildgraph-args="-set:WithClient=false -set:WithServer=false"

      - name: Tag and push Docker image with build prerequisites
        if: ${{ inputs.target == 'build-prerequisites' }}
        run: |
          docker tag adamrehn/ue4-${{ inputs.target }}:ltsc2022-vs${{ steps.set_vs_version.outputs.vs_version }} ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}-${{ inputs.target }}
          docker push ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}-${{ inputs.target }}

      - name: Tag and push Docker image with engine sources
        if: ${{ inputs.target == 'source' }}
        run: |
          docker tag adamrehn/ue4-${{ inputs.target }}:custom-${{ inputs.ue_version }} ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}-${{ inputs.target }}
          docker push ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}-${{ inputs.target }}

      - name: Tag and push Docker image with pre-built Unreal Engine
        if: ${{ inputs.target == 'minimal' }}
        run: |
          docker tag adamrehn/ue4-${{ inputs.target }}:custom-${{ inputs.ue_version }} ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}
          docker push ${{ env.REGISTRY }}/getsentry/unreal-docker:${{ inputs.ue_version }}